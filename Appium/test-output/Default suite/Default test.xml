<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Kunals-MacBook-Pro.local" failures="0" tests="1" name="Default test" time="18.535" errors="0" timestamp="2025-07-03T23:34:26 IST">
  <testcase classname="org.android.androidEcommerceApp.util.MobileBrowserBaseTest" name="@BeforeClass setup" time="18.511">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: A new session could not be created. Details: session not created: This version of ChromeDriver only supports Chrome version 138
Current browser version is 133.0.6943.137 with package name com.android.chrome 
Host info: host: &amp;apos;Kunals-MacBook-Pro.local&amp;apos;, ip: &amp;apos;fe80:0:0:0:144e:7e6b:d492:b2ba%en0&amp;apos;
Build info: version: &amp;apos;4.9.1&amp;apos;, revision: &amp;apos;eb2032df7f&amp;apos;
System info: os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;aarch64&amp;apos;, os.version: &amp;apos;15.5&amp;apos;, java.version: &amp;apos;21.0.7&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{browserName=Chrome, appium:chromedriverExecutable=/Users/kunalchavan/Documents/chromedriver, appium:deviceName=Pixel 8, platformName=ANDROID, appium:automationName=UIAutomator2}], desiredCapabilities=Capabilities {appium:automationName: UIAutomator2, appium:chromedriverExecutable: /Users/kunalchavan/Document..., appium:deviceName: Pixel 8, browserName: Chrome, platformName: ANDROID}}]
Capabilities {appium:automationName: UIAutomator2, appium:chromedriverExecutable: /Users/kunalchavan/Document..., appium:deviceName: Pixel 8, browserName: Chrome, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: A new session could not be created. Details: session not created: This version of ChromeDriver only supports Chrome version 138
Current browser version is 133.0.6943.137 with package name com.android.chrome 
Host info: host: 'Kunals-MacBook-Pro.local', ip: 'fe80:0:0:0:144e:7e6b:d492:b2ba%en0'
Build info: version: '4.9.1', revision: 'eb2032df7f'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '15.5', java.version: '21.0.7'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{browserName=Chrome, appium:chromedriverExecutable=/Users/kunalchavan/Documents/chromedriver, appium:deviceName=Pixel 8, platformName=ANDROID, appium:automationName=UIAutomator2}], desiredCapabilities=Capabilities {appium:automationName: UIAutomator2, appium:chromedriverExecutable: /Users/kunalchavan/Document..., appium:deviceName: Pixel 8, browserName: Chrome, platformName: ANDROID}}]
Capabilities {appium:automationName: UIAutomator2, appium:chromedriverExecutable: /Users/kunalchavan/Document..., appium:deviceName: Pixel 8, browserName: Chrome, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at org.android.androidEcommerceApp.util.MobileBrowserBaseTest.setup(MobileBrowserBaseTest.java:33)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="org.android.androidEcommerceApp.util.MobileBrowserBaseTest" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="org.android.androidEcommerceApp.testCases.MobileBrowserTest" name="mobileTest" time="0.0">
    <skipped/>
  </testcase> <!-- mobileTest -->
</testsuite> <!-- Default test -->
